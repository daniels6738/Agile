services:
  backend:
    build:
      context: ./back
    ports:
      - "3000:3000"
    environment:
      DB_HOST: mysql_db
      DB_USER: PAA
      DB_PASSWORD: senhaboaPAA
      DB_DATABASE: agile_platform_db
      DB_PORT: 3306
    depends_on:
      # NOVA FORMA: Espera o mysql_db se tornar saudável
      mysql_db:
        condition: service_healthy

  mysql_db:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: senhaexcelentePAA
      MYSQL_DATABASE: agile_platform_db
      MYSQL_USER: PAA
      MYSQL_PASSWORD: senhaboaPAA
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./back/src/db:/docker-entrypoint-initdb.d
    # SEÇÃO ADICIONADA: Verificação de saúde
    healthcheck:
      # O novo teste tenta executar uma query como o usuário da aplicação
      test: ["CMD", "mysql", "-h", "localhost", "-u", "PAA", "-psenhaboaPAA", "-D", "agile_platform_db", "-e", "SELECT 1;"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  frontend:
    build:
      context: ./front  # Aponta para a pasta do front-end
      dockerfile: Dockerfile  # Especifica o nome do Dockerfile
    ports:
      - "8080:80"  # Mapeia a porta 80 do contêiner para a 8080 da sua máquina
    depends_on:
      - backend # Garante que o front inicie depois do back


volumes:
  mysql_data: